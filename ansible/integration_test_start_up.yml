# Prepare integration test environment and start system under test

- hosts: all
  tasks:
    - name: get integration test start time
      shell: "date '+%Y-%m-%d %H:%M:%S'"
      register: integration_test_start_time

- hosts: epics_test_server
  tasks:
    - name: IOC is running
      docker_container:
        name: ioc
        image: simpleioc
        working_dir: /opt/epics/iocs/SimpleIoc/iocBoot/iocSimpleIoc
        entrypoint: /opt/epics/iocs/SimpleIoc/bin/linux-x86_64/SimpleIoc st.cmd
        tty: yes
        network_mode: host
        state: started

- hosts: test_orchestrator
  tasks:
    - name: create Kafka topics
      command: "{{ test_orchestrator_virtualenv_path }}/bin/python {{ test_orchestrator_script_dir }}/create-kafka-topics.py {{ integration_test_kafka_bootstrap_servers }}"

- hosts: forwarder
  tasks:
    - name: forwarder is running
      become: yes
      service:
        name: ecdc-forwarder
        state: restarted

- hosts: kafka_to_nexus
  tasks:
    - name: file writer is running
      become: yes
      service:
        name: ecdc-kafka-to-nexus
        state: restarted

- hosts: itestkafka01.dm.esss.dk
  tasks:
    - name: kafka file writer commands log file is absent
      file:
        path: "~/kafka_filewriter_command.log"
        state: absent

    - name: start writing kafka file writer commands to file
      shell: "{{ kafka_base_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic {{ kafka_to_nexus_command_topic }} > kafka_filewriter_command.log"
      args:
        chdir: "~"
      async: 600
      poll: 0

- hosts: kafka_to_nexus
  tasks:
    - name: output NeXus file is absent
      become: yes
      file:
        path: "{{ kafka_to_nexus_data_dir }}/{{ integration_test_nexus_file_name }}"
        state: absent

- hosts: all
  tasks:
    - name: populate service facts
      service_facts:

- hosts: efu
  tasks:
    - name: fail test if efu service is not running
      fail:
        msg: "ecdc-efu-{{ item.instrument }}-{{ item.region }} service is not running"
      loop: "{{ event_formation_unit_config }}"
      when: ansible_facts.services['ecdc-efu-' + item.instrument|string + '-' + item.region|string + '.service'].state != 'running'
      any_errors_fatal: true

- hosts: forwarder
  tasks:
    - name: fail test if forwarder service is not running
      fail:
        msg: "ecdc-forwarder service is not running"
      when: ansible_facts.services['ecdc-forwarder.service'].state != 'running'
      any_errors_fatal: true

- hosts: kafka_to_nexus
  tasks:
    - name: restart file writer
      systemd:
        name: ecdc-kafka-to-nexus
        state: restarted
      any_errors_fatal: true

- hosts: test_orchestrator
  tasks:
    - name: set initial value of EPICS PV
      shell: "\
        {{ epics_base_dir }}/epics/bin/pvput SIMPLE:VALUE1 0; \
        sleep 1"
